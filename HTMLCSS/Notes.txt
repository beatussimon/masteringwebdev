CSS selector
css property
css value

onhover- adds pseudo-class when we are in a certain situation 
1:03:12

Using padding is the better altenative to the hwight and width because using passsing allows the button to resize  
with the length of the text

vertical align either top or butm overwrites the default text alignment behaviour 
which tends to align the items according to the text by default

HTML entity give you the code symbols fo instance copyright, certifies etc.

SPECIFICITY -> Element name ->classname ->id    

Text element- These exist inside the text element, text eleemnts like bold, string, u comes with some 
properties by default but <span> element is very dope bse it doesnt come with defaukt properties making it 
best if you want to target a speciefic part of the text and add some styles or changes by uising the classes super flexible

void elements-  they dont require the closing tqg

a paragraph by default is a block element
inline block element takes as mich space as it needs to eg. img and input element
inline element- appears with in a line of text 
These element properties can be changes accordingly using the display css attribute

2:25:00 - Lesson 8

by default divs have 100% width so they behave like block elements

3:16

you aliggn items in grid using align items attribute

flexbox is the same as grid but its more flexible

3:45 flexbox Lesson 11

Flex:1 is the equivalent of 1fr in grid 
4:15 today up to lesson 14

The div inside the container with flex doesnt means the items inside a flexbox that means 
you are unable to have the previllege to use some properties like ALIGN ITEMS or JUSTIFY-CONTENT

QUESTION: when to use flexbox and when to use grid

bt defaukt the flex-direction is row

4:44 CSS Position

flex-shrink:0; -> this implies dont shrinkwidth: 0 -> implies the element shrinks
finish up the exercise  which you found yourself in trouble for intance aligning an ittem horizontallyt and vertically according
compelete then keep moving foward

05:07 -> Position Absolute and relative 

Normally the fitems written bekow will appear on top of the elemtnts written above it we can overwrite it by adding anither 
property called z-index -> determines which elements appear in the front and which eleemnts appear in the behind defauilt index id 0px
the greater the z index the more front it appears

the goos thing about position relatiove you can place it inside the position fixed and the relative to fixed relationship wil occur

in position static the elements always appears at the back of the page, after changing the position to the others the rule of which was written 
first is considered


do the exercise in 15e clothing design 5:33:47

when we write .sidebar-link image{
    we are targeting the all of the images in side the sidebar
    targeting the items inside the left chosen selection

}

if you use the fkex=direction property to column the align items and JUSTIFYcontent
centering dierections are reversed

to target the element only when you hover you can use the fiollowing syntax
.sidebar-link:hover{
    then add your code
}

pointer effects : none so that pointer effects are shown when the mouse is hoveref 
on the tooltip but only on the button

lesson 17
media queries
if you have two paddings like 21px 45px the left padding will be the (1st value vertical paddingans the selectiond 
value will be the horizontal padding)
if you use all the  four values its like starting from the to and going your way out clockwisely

for border: 1px  solid color corresponds to border radius, border style, and border color 

INHERITANCE
When you set the style to the inner elements it gets passed down to the outer elements 

Not all the elements are affected by the INHERITANCE for example 
INHERITANCE mostly works with text elemtnts doesnt affect things like border margin and padding

INHERITANCE is deeply affected by SPECIFICITY

semantic elements 
<nav> <header> <main inside main you have section> <footer> they are just the same as divs except they give special meaning  and structure to urr page for search enngnines and screen readers 

comments

<!this is a comment!>

single line commenting find that


flexbox, media queries

grid-column-gap
grid-row-gap
grid-template-column




lesson 8: Objects
in the objects which lists the key value pairs the left is the property which is the key of the value which can be acessed via the .
property-value pairs and you can haave multiple property value pairs with in an objects

you can also delete the property from the object using the nmotation delete object.property

Objects group the things together and remove the necessity of having too many variables for multiple things

Bracket notations lets us use the the properties that dont work work woth dot notations
for instance the properties with - rg. praoducts.delivery-time ......-> this will gove an error Reference error 
the same bracket notaation can be used to crete the eklentnts of the objects for instance {
    name: 'shirt',
    ['delivery-time']: '1 day'
}
if its a string like in that exampe then the brackets are optional
object inside object --> Nested Object


YOU CAN HAVE FUNCTION INSIDE AN OBJECT AS A VALUE FOOR A property
A function is another type of value


functions inside objects are called methods

JSON does not support single quotes but also does not support functions but in other ways JSON is similar to a Javascript object but woth less features

we use JSON more b'se JSON is universal is used when:
-we send data between computers
-when we store data

JSON.stringfy(object) to convert Javascript object to JSON

ro change the object from JSON to Javascript object we use JSON.parse


LOCAK STORAGE
variables are temporary when we refesh our page they vanish
localStorage.setItem('message', 'hello') -> the local storage supports strings only

when we want to acess the item use localStorage.getItem('message')

to delete the data in the local storage use 
-> localStorage.removeItem('score') -----> this removes the STRING score
remember converting from and to object and normal javascript object as it doesnt output the strings but JSON does

use dhortcuts
and default operators

null-> means we want to intentionally have something empty


AUTO-BOXING

javascript automatically boxes the string inside an object and henece enabling it to have methods like .toUpperCase() and properties like .length

always learn learn how to tekk the difference between the methos and properties

Auto-boxing also works with numbers and booleans but doesn't work with null and undefined


Objects are references
copy by references

You cant diretly compare the objects, the objects compares the references not the objects inside it

const message = object4.message
const {message} = object4 this is called destructuring (the variable name equals th property name)

if we have const object4{
    message: 'good job', 
    price: 799
}

then to destructure this 

const {message, price} = object4

destructuring gives us an easier way to take the valuse out of the object and assgn them to variables

SHORTHAND property


you can just put the method in there insrtead of creating the key value pairs and it wil do the same thing

if the property and variable name are the same then you can use the single term 
for example
if you have object5{
    message:message
}
 has the same effect as 
 object5{
    message
 }
 this implies the message wikk inherit all the valuses from the previouus object


 5:25:47